<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
	<title>rsdy.github.com feed</title>
	<link href="http://rsdy.github.com/atom.xml" rel="self"/>
	<link href="http://rsdy.github.com" rel="alternate" type="text/html"/>
	<id>http://rsdy.github.com/</id>
	<author>
		<name>rhapsodhy</name>
		<email>me@rhapsodhy.hu</email>
	</author>
	<updated>2013-03-15T15:50:34Z</updated>
<entry>
  <title>Google Reader and the Open Web</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/greader_and_the_open_web.html"/>
  <id>http://rsdy.github.com/posts/greader_and_the_open_web.html</id>
  <updated>2013-03-15T16:48:11Z</updated>
  <content type="html"><![CDATA[<p>Since Google announced it will be shutting down Reader, Hacker News, Reddit, and the tech side of Twitter has been outraged. Reader was cool service for the hard core Internet users, information addicts and journalists.</p>
                                <p>While lots of people bitch about the shutdown, it is worth noting, that <a href="http://gigaom.com/2013/03/13/chris-wetherll-google-reader/">apparently</a> Reader has always been a <a href="https://en.wikipedia.org/wiki/Growth-share_matrix">dog</a> of the company. While the numbers of the userbase might be in the millions, Google is huge enough not to care and allocate its talented engineers for more profitable products.</p>
                                <p>Since the shutdown was announced, we have already seen nice feed readers popping up, and I'm sure we will see more, possibly done by the same guys. I wouldn't worry, RSS has a future, one too similar to the present of IRC.</p>
                                <p>Because however sad it is, RSS will go down the same way IRC did. The IRC userbase now only consists of veterans and old-school Internet users, but even some CS graduates don't even know what it is about. Many freshmen don't know what a turntable is.</p>
                                <p>I'm not crying for IRC, as it is old and has its problems, but it is still a fascinating technology. Although it paved the way for many IM implementations we see today, and was a great step towards a distributed social network if you will, consumers have already moved on to the centralised social media. Exactly the market in which Google is trying so hard to be successful, competing with a bunch of other closed ecosystems. Making its services form a nicely integrated whole makes sense, since the more time users spend with them, the more they are exposed to advertising, and the more willing to pay for more storage, premium add-ons, etcetera. A feed reader is just <a href="http://www.zdnet.com/sad-to-see-google-reader-go-come-on-folks-its-2013-7000012596/">not part</a> of most people's internet life, and doesn't fit in this image.</p>
                                <p>Although users love these services, it is worth considering the vendor lock-in we have become exposed to. Both on the <a href="https://rachelbythebay.com/w/2013/02/22/mac/">Internet</a>, and away from keyboard, people are getting angry. Well, not too much, but even I was surprised that I've heard this from some non-techy friends.</p>
                                <p>We're living in the walled gardens of a handful of digital lifestyle providers, which are blocking the communication between their users. Microsoft, to gain traction, teamed up with Facebook for the social part of its side, but I was annoyed how they force Windows Live on users with Windows 8. Apple is struggling to make their online services better. I've heard that their between-device sync works well most of the time, while they aren't really in the social part yet, and missing out on the online office suite altogether. There are probably some others that aren't so big, but this is a tendency.</p>
                                <p>While I'm not saying that competition over cooperation is evil, it's alarming how hard it is to move from one platform to the other. Moreover, it's highly improbable that a user might use Gmail as well as Office 365, because of their unique features and great integration. This concentration of personal information also allows for great <a href="http://www.pnas.org/content/early/2013/03/06/1218772110.full.pdf+html">profiling</a>, <a href="http://www.amazon.com/b?ie=UTF8&amp;node=5160028011">targeted advertising</a>, or <a href="http://www.businessweek.com/articles/2013-03-08/skypes-been-hijacked-in-china-and-microsoft-is-o-dot-k-dot-with-it">mass</a> <a href="http://www.reuters.com/article/2013/03/13/us-france-skype-investigation-idUSBRE92C02Q20130313">surveillance</a>, or even <a href="http://www.huffingtonpost.com/2013/03/04/apple-barely-legal-teens_n_2805882.html">censorship</a>. If you believe you have nothing to hide, you will still be outraged when Twitter or Netflix goes down, or if your credit card details are <a href="http://arstechnica.com/gaming/2011/04/sony-admits-utter-psn-failure-your-personal-data-has-been-stolen/">stolen</a> from your PlayStation account.</p>
                                <p>The <a href="https://unhosted.org/">unhosted</a> movement provides a great alternative approach towards managing online presence and social networking, but it is still immature and more of a playing field, rather than something that has developed its business models. With the importance of JavaScript still in growth, and turning into a language research area, I expect many developers will pick up the serverless app design, just like they started making REST APIs for everything when Hacker News was all about AJAX. The problem will be with hosting that unhosted data. Laptops, tablets, and smartphones, and whatever Internet-connected machines should share their otherwise not used resources to assist their user in having a private online life, but then how do I chat with Alice? How do I even prove it is her that I am talking to, before actually talking to her? Also, how can I share a document with Bob if I will be on a plane by the time he checks? Do we have to pay for service providers, centralising the whole thing again? Do we have appliances at home, beside or inside our router, HTPC, or TV? And, until IPv6 gets widespread, how do we route and address all this traffic? And how will my News Feed fill up with amateur food porn and cats of my friends?</p>
                                <p>While we have a few answers, we probably have many more questions. For some of them, RSS or its descendants might prove to be a great answer after all.</p>]]></content>
</entry>
<entry>
  <title>Fuck the Corporate Cloud</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/fsck_the_police.html"/>
  <id>http://rsdy.github.com/posts/fsck_the_police.html</id>
  <updated>2013-03-10T04:56:19Z</updated>
  <content type="html"><![CDATA[<p>Recently, the fact that I started using Android without root lurged me into weaking on the personal cloud concept a little further. After deciding that the final name of the project won't be KitchenSync, actually syncing my phone to my Raspberry Pi at home was quite <a href="https://github.com/KitchenSync/raspberry_configuration">easy</a>. Setting up the connection through <a href="https://www.torproject.org/">Tor</a> was quite straightforward, but it had two major problems. First, most apps don't play nice with <a href="https://play.google.com/store/apps/details?id=org.torproject.android">Tor on Android</a>, and I needed a rooted phone to circumvent this limitation. Second, Tor's bandwith made it hard to extend the range of services the Raspberry Pi offered, namely calendar and contact <a href="http://baikal-server.com/">sync</a>, so I decided to take a peek at the situation from a different perspective.</p>
                                <p>Without giving it much thought, I hooked up my Raspberry Pi at home to the <a href="https://strongswan.org/">IPsec</a> connection I usually use for tunneling on hostile networks. I consider a virtual private server a nice thing to have. It handles my mail, and, among all sorts of other things, acts as a secure tunnel towards the Internet when I'm on hostile networks. As the saying goes, now I two problems.</p>
                                <p>I have a 4-device private cloud, where every client connects to the VPS. This is easy because it has a domain name and is directly routed to the Internet, essentially using a star-topology. Originally, I wanted to make the KitchenSync thing as decentralised as possible, so this made me think about the implications.</p>
                                <p>The advantage of using Tor over the IPsec star above is that it hides the peers' locations, and doesn't depend on a single point of failure. On the other hand, I have a completely legitimate reason to connect to the VPS that has a domain registered on my name, hosts my public email, etcetera. While these topologies migth seem to be serving completely different purposes, they actually complement each other very well.</p>
                                <p>The VPS can act as a frontend to all the various services that are run by the backend Raspberry Pies connecting through Tor, reverse-proxying requests. There will be a performance impact, but the location of the backends is hidden, and there's no Tor traffic originating from my mobile devices, which might or might not be a good thing under different circumstances. Hiding all the dirty work under the hood, running a Tor relay on the Internet-facing host will make the traffic towards the backends blend in with the constant load of Tor traffic through the box.</p>
                                <p>If I understand it right, this vaguely resembles what The Pirate Bay is doing right now, operating in the cloud. More importantly, without the hidden service twist, this is what most load-balancers everywhere else do.</p>
                                <p>The bottom line is that you probably don't need Tor support on all your devices if you want to host your services in the Dark Net. As a techie, you probably have a VPS of some sort anyway, and setting up this topology will get you better security and privacy than using corporate clouds. While Tor is more advanced in this perspective, running IPsec or SSH on port 443 could help you establish connections that get through most routers. Even if the outpost is compromised, the real location of the data will stay hidden. Employing some sort of caching on the public VPS could enhance the bandwith, but probably has implications and challenges I haven't thought about.</p>
                                <p>So what is this good for? I can reach my mail, files, chats from all my devices in a native way. Apart from the fabulous CardDAV-Sync and CalDAV-Sync apps from <a href="https://play.google.com/store/apps/developer?id=Marten+Gajda">Marten Gajda</a>, I'm using open source software. Services talk with clients through standard protocols, through encrypted channels, and possibly no data is stored unencrypted. Marten confirmed he's going to open source his sync apps sometime in the future. With some work I could set up a cloud similar in services to those offered by popular companies, based on open source software and reasonably good security practices. Packaging it up properly, tough, to attract users, will take a huge effort.</p>]]></content>
</entry>
<entry>
  <title>Some Animals Are More Equal</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/cloud_computing.html"/>
  <id>http://rsdy.github.com/posts/cloud_computing.html</id>
  <updated>2013-01-12T18:32:09Z</updated>
  <content type="html"><![CDATA[<p>Cloud computing today is indeed a popular phenomena. iStuff work together like they're supposed to, Google's solution is arguably even more sophisticated, while Microsoft is catching up (hopefully) rapidly.</p>
                                <p>It is nice to have everything available every time, and I'm quite sure everybody loves this. That's a lot of 'every' in one sentence. Let me repeat the essence: everything, every time, everybody. Anywhere you might be.</p>
                                <p>We have been warned by many conspiracy theories, dystopias, and cyberpunk movies that such a brilliantly easy and convenient system can turn against us, either by gaining consciousness of its own, which is currently less probable, or by having someone abuse it -- or just use it. After all, it is only a matter of perspective.</p>
                                <p>Our conspiracy theories about a surveillance society seem to get confirmed, and, living in the UK, the extensive CCTV network -- for my own good -- quite disturbingly resembles episodes from Ghost in the Shell.</p>
                                <p>The clouds, into which we willingly upload our stuff -- be it music or movies we purchased, pirated, or made ourselves -- are services run by companies that are big enough to pose the question: which side are they on? Since we can't look into these magic black holes that sip up our infinite data, we cannot be sure. We also cannot be sure about their competence in ensuring the integrity and privacy of our stuff.</p>
                                <p>I don't want to elaborate how bad the situation is and that the doom is certainly near. We've survived The Apocalypse another time last year. Also, I do not believe these companies are evil. They just want their fair share of profit, and comply with the requirements of authorities to stay in business. That's fine. I just want my privacy.</p>
                                <p>For long, I haven't found a viable usecase for a tablet, but as I'm reading more and more recently, I've decided that it's a better solution than stashing up hardcover books, printed slides, and lecture notes, and probably more versatile and shiny than an e-book reader. However, there's a catch. Nexus 7 has lots of storage. Storage that I don't need on my tablet. This made me think.</p>
                                <p>Epinephrine, my Raspberry Pi at home, has an expandable storage, so has my laptop, and my phone. My VPS has some free space, too, and a 32Gb Nexus 7 would be sleeping inside WiFi coverage most of the time. Adding all the free space together, I'm sitting on probably over a 100Gb of unused, and unusable storage.</p>
                                <p>Why the hack would I pay to a cloud storage provider that hosts my stuff, while all these devices could -- and should -- use all their available storage to serve me wherever I am and whenever I want? Just like a cloud, but without the centralized part. Most importantly, there should not be a single node which has higher priority than the others. If one of them disconnects for some reason, there should be at least one other that can serve the same piece of data. If I run out of space, it should be trivial to pull in some more resources from regular cloud, since everything should be stored encrypted, anyway. An emergency kill-switch would also be nice to have.</p>
                                <p>And so, the idea of KitchenSync is dead -- the name has been for long, due to a collision. It is now superseded by something better that has no name yet. With so many questions buzzing in my head, that's the least of my concerns. Now it's time to experiment.</p>]]></content>
</entry>
<entry>
  <title>Don't write your own JSON parser, please</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/dont_write_your_json_parser_plz.html"/>
  <id>http://rsdy.github.com/posts/dont_write_your_json_parser_plz.html</id>
  <updated>2012-10-20T02:04:15Z</updated>
  <content type="html"><![CDATA[<p><em>TL;DR</em>: just use a fucking library.</p>
                                <p>I’m reading more code than I used to. Partly, because that’s how freelancing works, and partly, because I’m getting more interested in other people’s codes. Usually, I find little marvels, either in the good, or the bad way.</p>
                                <p>When dealing with tidy code, things just make sense. Everything works as you expect it to work, and it feels throughout the project, that the original author knew what he was dealing with. Tidy code uses libraries that make sense, and implements as few things as possible to fulfill its purpose. The architecture should be flat, and wide, rather than deep and narrow. Clean code makes sense, but certainly isn’t a silver bullet, and you might find yourself seeing shortcuts for the sake of laziness, or trying to keep it small. That’s fine.</p>
                                <p>Bad code, usually, is not so subtle. Even the directory stucture is messed up in the Django project. Looking at urls.py is a great start figuring out how screwed you are if you have to touch it. Eventually, you’ll come across a JSON parser implementation, that tokenizes the incoming string based on special characters, and that’s when you start weeping like a little baby.</p>
                                <p>For starters, this is not how one parses a JSON file, however simple that might seem at first. If the author didn’t have the time to write a proper JSON parser, then she should have looked for a library, because the Internet is filled with JSON parsers for various languages.</p>
                                <p>Since tokenizing is not the proper way of parsing a JSON (and a CSV that may contain strings, for that matter), the application is flawed from this point. If you do this, you’re building a functionality on a piece of code whose behaviour is arbitrary. Naturally, the data that is extracted from a JSON should be validated, but even if that bit is intact, you’re building on a certain implementation of the interface, that is the JSON formatted input being parsed. Thus, whenever the generator of the input changes in implementation, you’re pretty much screwed.</p>
                                <p>There is one reason I can imagine that could justify such a solution in a shipped code. When dealing with huge amount of data, a substring magic could be faster than a full-blown JSON or CSV engine. I would use this solely for a one-time hack, but I can imagine a situation where the API or data is stable (as in, change is controlled and coordinated), and the possible inputs can be expressed in regexp. That would be a weird design, but may make sense in certain industrial environments, or the good old enterprise.</p>
                                <p>Most of the time, though, this is not the case. It is fine if you don’t know how how JSON works in the language you’re coding in. Be creative just enough to write down the search keywords, but not so much to write the whole stuff. Others have done it.</p>]]></content>
</entry>
<entry>
  <title>The Horrible Moment when Everything Works</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/building_infrastructure.html"/>
  <id>http://rsdy.github.com/posts/building_infrastructure.html</id>
  <updated>2012-09-29T00:09:36Z</updated>
  <content type="html"><![CDATA[<p>There hasn't been an update on the <a href="http://indiegogo.com/kitchensync">KitchenSync</a> project site for some time, and this is because I started the crowdfunding campaign just after moving to the UK, and needed to bootstrap my own little network infrastructure in my flat. I did not have the time, nor the possibility to work on the Raspberry Pi software, because I just didn't have the hardware setup that was necessary.</p>
                                <p>This has changed. I bought myself a router, the USB mains charger with a UK plug, and finally set it all up.</p>
                                <p>I wasn't particularly interested in the stock firmware that came with the router, so right after unpacking, I flashed DD-WRT on it. Sadly, I found out only after I had received the box that it is not supported by OpenWRT, so I had to stick with the other popular WRT distribution.</p>
                                <p>There are actually many reasons one might want to eliminate the stock firmware from their home router. Not only do you get the chance to opt out some <a href="http://www.theverge.com/2012/7/2/3131738/cisco-linksys-router-update-connect-cloud">weird corporate cloud</a>, it also extends the functionality. My ISP requires me to log in on a captive portal after 30 minutes of inactivity, but fortunately they didn't put much effort into hardening their login page. Thus, a simple cron one-liner on the router did the trick, which would have been impossible with the stock firmware.</p>
                                <p>I have also put my laptop dock into good use after all. When I leave home, I just undock my machine, and pop it in my bag. With a huge battery, I can go all day without a charger, so that's fine. If the machine rests on the dock, it just uses the wired connection with the router, and my USB hard drives spin up.</p>
                                <p>The Raspberry Pi, my soon-to-be KitchenSync, is placed just beside the router. Sadly, I don't yet have the fancy case for it, but as soon as it arrives, I'll start posting pictures. Luckily, I have UTP cables in different colours for all my wired devices, so my desk doesn't look like a pile of boring gadgets (firstly, because it isn't).</p>
                                <p>Why is this even exciting? Because this is the first time I'm in full control over the network setup at home, and just because I love it when suddenly everything starts to work. Even better, my phone, the Raspberry Pi, the router, and my laptop are all powered by some sort of Linux. I actually realised this after having set up everything, but I think it's cool anyway.</p>
                                <p>In some twisted sense, however, I'm also sad. This means that the infrastructure works as it should, and I don't have any ideas on improving it. Apart from some proper VPN setup. And an Arduino temperature sensor. And KitchenSync.</p>]]></content>
</entry>
<entry>
  <title>What I learned on the first day of my crowdfunding campaign, without funders</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/first_day_of_crowdfunding.html"/>
  <id>http://rsdy.github.com/posts/first_day_of_crowdfunding.html</id>
  <updated>2012-09-07T10:45:55Z</updated>
  <content type="html"><![CDATA[<p>Long before I resigned from my position as a developer I had been planning to start a crowdfunding campaign. I have had the idea for some time, but it was only after a couple of days after I have received my first Raspberry Pi when the plans became clear in my head. And I was very careful who to share it with, and when. Not because I was afraid someone might steal it, but because I wasn't quite sure I can even start a campaign like this.</p>
                                <p>Everyone I told my great idea was very supportive. Go ahead, they said, it will be fine, they said. And so I went on, and did what I could. I've seen many a project raise lots of money in the first days of its crowdfunding campaign, so I thought what the hell, I can do too!</p>
                                <p>What does it take? Share it on Reddit, share it on HackerNews, Facebook, Twitter, and the link will get to many people, and everybody will want to buy in. After all, all the non-geeks I talked to about <a href="https://indiegogo.com/kitchensync">KitchenSync</a> seemed to like my project.</p>
                                <p>Of course, things often don't work out as a naive student thinks. The people I counted on weren't so in the mood of sharing like I had thought they would be. Who have come across the link on either Reddit or HackerNews, though, have also been very supportive and had great ideas. Nevertheless, none of them wanted to contribute their hard-earned cash to me.</p>
                                <p>So I realised I didn't, and still don't have a plan B on how to spread the link. Maybe I should send it to a couple of more mailing lists I follow, but I don't really know how they would take a shameless self-advertisement, which essentially begs for their money, without any guarrantee on any actual results.</p>
                                <p>Because this is what crowdfunding is about: you earn people's trust, and they give you their money. How can I earn their trust? With already running projects, and a cool story. I think I have a cool story, so it's a tick. Others might think otherwise, but I'm confident I'm a cool guy. However, if you check out my GitHub account, all you can find are half-done Arduino projects, with one or two exceptions, that I'm actually proud of, along with my desktop and shell configurations, that I'm extremely proud of. But those aren't the things most people can relate to or even understand. Those are pure geek porn.</p>
                                <p>I don't have a tech or even a personal blog. I abandoned my <a href="https://rsdy.blogs.balabit.com/">old tech blog</a> when I quit my job, and I'm not really eager to go back, and now, when I will upload this blog post to GitHub, I realise it seems like this is my first blog post on the interwebs. How am I even willing to earn people's trust, when they have no evidence that I actually know what I'm talking about?</p>
                                <p>Even though I'm sure I know enough to complete the project, I have nothing to prove I'm up for the task and will eventually deliver. I screwed this up many years ago when I started to slack off from writing, and even pulled my blog offline. But even that blog was in Hungarian, my native language, and was more of a personal blog than a techblog documenting the amazing stuff I had done. I actually was making many cool projects throughout high school, when that blog was still online, and not once did I mention those projects.</p>
                                <p>I also realised that with <a href="http://techblog.vsza.hu">one apparent exception</a>, the people I know, and my closest friends are not going to contribute money to the project. That is fine, and I'm not blaming them. People in Hungary don't really buy stuff on the Internet with credit cards, let alone spend their money on something they won't receive within a week. I knew that all along. Friends supported me with words, and that's enough. But as the Indiegogo tips and tricks page mentioned, I should base 25% of my income on the family and closest friends, which is logical: they are supposed to be the ones who trust me enough to invest money in me, and with their contributions, they convince others to do so as well.</p>
                                <p>But why would they spend their money on me, when they have no interest in my project whatsoever? Even if they find the idea cool, it's not going to benefit them in any way, or at least they don't think so.</p>
                                <p>Am I targeting the geeks after all? Did I really think this through? Do people actually care about their privacy, or are they most comfortable using whatever cloud services they find?</p>
                                <p>I had lots of time to think, because it was a long day yesterday. I didn't want to go to sleep before I knew I did everything I could to set off my project. It was a long day, for sure. I was furious answering the questions on IRC, HackerNews and Reddit, but nothing seemed to catch people's attention. So here you are, the things that I screwed up:</p>
                                <ul>
                                <li>if you can't rely on your family and friends to contribute money, people won't think this is a worthy project. When they see it isn't funded yet, they're most likely to just close the tab and move on.</li>
                                <li>if people think your projects are fascinating that doesn't mean they're going to invest. You get positive responses, but not constructive criticism. Most people wish you luck, but don't share. You need a reliable audience who reshare from the very beginning.</li>
                                <li>know who you are targeting. If your closest friends are not willing to contribute money, you'll most likely fail. You need to have the critical mass who contribute money, then others may follow.</li>
                                <li>when you're making software, you need a public track record. Create something amazing, then you can make the crowd fund something more amazing.</li>
                                <li>you need to blog. You need to show you have an understanding of what you do. People want to relate to you.</li>
                                <li>don't be afraid to spread your project. People like entrepreneurs. They'll understand.</li>
                                </ul>
                                <p>I hope you'll have more luck than I had in the first days. If you've come across this post, you might want to check out my <a href="https://indiegogo.com/kitchensync">Indiegogo page</a>, and I'd be grateful for a contribution and a share as well.</p>]]></content>
</entry>
<entry>
  <title>The Humbleness of the Dish</title>
  <link rel="alternate" type="text/html" href="http://rsdy.github.com/posts/the_humbleness_of_the_dish.html"/>
  <id>http://rsdy.github.com/posts/the_humbleness_of_the_dish.html</id>
  <updated>2012-09-17T13:03:59Z</updated>
  <content type="html"><![CDATA[<p>I've discovered today a fabulous <a href="https://www.nytimes.com/slideshow/2012/09/12/dining/20120912-SPANISH.html">picture-illustrated recipe</a> for the perfect fried eggs, and after trying out myself, I started thinking about how the world-class chefs are <a href="http://youtu.be/dU_B3QNu_Ks">obsessed</a> with the <a href="http://youtu.be/57afEWn-QDg">idea</a> of <a href="http://youtu.be/AgHgbn_sVUw">perfectly prepared eggs</a>.</p>
                                <p>The few words that really caught my eye in the description of José Andrés's technique were &quot;the humbleness of the dish&quot;. I think all of the other videos mention that when you want to test whether a chef is indeed worthy, you have them make something out of a handful of eggs.</p>
                                <p>Programmers have something similar to the egg-test, called <a href="http://www.codinghorror.com/blog/2007/02/why-cant-programmers-program.html">FizzBuzz</a>. I know a couple of companies who make use of the FizzBuzz test with each of their applicants, just to determine if he or she can program at all, although I would not go as far as drawing a conclusion about their skills.</p>
                                <p>More interestingly, the humbleness of eggs is what I haven't realised before. Eggs are abundant, they're cheap, and really easy to prepare, yet, depending on how you do it, you will get very different results. As I love to experiment with food, I have some routine in preparing eggs in a couple of ways, and for a quick dinner I usually choose one that suits my mood, or just give it some thought, and try something new. If it is any good, I'll have plenty of times to perfect the preparation, starting with the next day, for example.</p>
                                <p>This is exactly why I love the UNIX command line tools. They are really versatile, and the shell, in particular, is often under-estimated by even experienced geeks. The fact, that something scales from standard day-to-day tasks, such as file manipulation, to more complex things like a blog engine, is fascinating.</p>
                                <p>Keeping the KISS principle of software development will help you create better software, very much like eggs make a perfect dinner if you spice them up a bit so that they make a difference. I've seen many people use loads of Python code just to accomplish what could have been done in two lines of shell.</p>
                                <p>It's all about knowing the simple ingredients you have at hand, and realise when they're enough for a dinner. If you are really hungry, you will need to add some more vegetables, fish, meat, or whatever floats your boat, but don't waste your energy preparing a big meal, when some eggs will suffice, that just makes you even more hungry.</p>]]></content>
</entry>
</feed>
